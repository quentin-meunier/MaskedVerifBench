(* File AES-Herbst.ec *)
(*                                                                                       *)
(* Copyright (C) 2021, Sorbonne Universite, LIP6                                         *)
(* This file is part of the MaskedVerifBench project, under the GPL v3.0 license         *)
(* See https://www.gnu.org/licenses/gpl-3.0.en.html for license information              *)
(* SPDX-License-Identifier: GPL-3.0-only                                                 *)
(* Author(s): Etienne Pons                                                               *)

op Ox36 byte
op Ox80 byte
op Ox40 byte
op Ox20 byte
op Ox10 byte
op Ox08 byte
op Ox04 byte
op Ox02 byte
op Ox1b byte
op Ox07 byte
op Ox01 byte

module M = {
  proc main(k_0 k_1 k_2 k_3 k_4 k_5 k_6 k_7 k_8 k_9 k_10 k_11 k_12 k_13 k_14 k_15) = {

    pt_0 = Ox01;
    pt_1 = Ox01;
    pt_2 = Ox01;
    pt_3 = Ox01;
    pt_4 = Ox01;
    pt_5 = Ox01;
    pt_6 = Ox01;
    pt_7 = Ox01;
    pt_8 = Ox01;
    pt_9 = Ox01;
    pt_10 = Ox01;
    pt_11 = Ox01;
    pt_12 = Ox01;
    pt_13 = Ox01;
    pt_14 = Ox01;
    pt_15 = Ox01;
    
    m = $distr;
    mp = $distr;
    mt_0 = $distr;
    mt_1 = $distr;
    mt_2 = $distr;
    mt_3 = $distr;
    mpt_0 = mt_0;
    mpt_1 = mt_1;
    mpt_2 = mt_2;
    mpt_3 = mt_3;
    
(* #### Mix column #### *)
    a_0 = mpt_0;
    h = mpt_0 >> Ox07;
    b_0 = mpt_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = mpt_1;
    h = mpt_1 >> Ox07;
    b_1 = mpt_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = mpt_2;
    h = mpt_2 >> Ox07;
    b_2 = mpt_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = mpt_3;
    h = mpt_3 >> Ox07;
    b_3 = mpt_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    mpt_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    mpt_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    mpt_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    mpt_3 = e;
    

    x_0_0 = pt_0;
    x_0_1 = pt_1;
    x_0_2 = pt_2;
    x_0_3 = pt_3;
    x_1_0 = pt_4;
    x_1_1 = pt_5;
    x_1_2 = pt_6;
    x_1_3 = pt_7;
    x_2_0 = pt_8;
    x_2_1 = pt_9;
    x_2_2 = pt_10;
    x_2_3 = pt_11;
    x_3_0 = pt_12;
    x_3_1 = pt_13;
    x_3_2 = pt_14;
    x_3_3 = pt_15;
    
(* #### Mask plain text #### *)
    x_0_0 = x_0_0 ^ mpt_0;
    x_0_1 = x_0_1 ^ mpt_0;
    x_0_2 = x_0_2 ^ mpt_0;
    x_0_3 = x_0_3 ^ mpt_0;
    x_1_0 = x_1_0 ^ mpt_1;
    x_1_1 = x_1_1 ^ mpt_1;
    x_1_2 = x_1_2 ^ mpt_1;
    x_1_3 = x_1_3 ^ mpt_1;
    x_2_0 = x_2_0 ^ mpt_2;
    x_2_1 = x_2_1 ^ mpt_2;
    x_2_2 = x_2_2 ^ mpt_2;
    x_2_3 = x_2_3 ^ mpt_2;
    x_3_0 = x_3_0 ^ mpt_3;
    x_3_1 = x_3_1 ^ mpt_3;
    x_3_2 = x_3_2 ^ mpt_3;
    x_3_3 = x_3_3 ^ mpt_3;
    

    
(* #### Init keys #### *)
    e = k_0 ^ mpt_0;
    e = e ^ m;
    r_k_0 = e;
    e = k_1 ^ mpt_1;
    e = e ^ m;
    r_k_1 = e;
    e = k_2 ^ mpt_2;
    e = e ^ m;
    r_k_2 = e;
    e = k_3 ^ mpt_3;
    e = e ^ m;
    r_k_3 = e;
    e = k_4 ^ mpt_0;
    e = e ^ m;
    r_k_4 = e;
    e = k_5 ^ mpt_1;
    e = e ^ m;
    r_k_5 = e;
    e = k_6 ^ mpt_2;
    e = e ^ m;
    r_k_6 = e;
    e = k_7 ^ mpt_3;
    e = e ^ m;
    r_k_7 = e;
    e = k_8 ^ mpt_0;
    e = e ^ m;
    r_k_8 = e;
    e = k_9 ^ mpt_1;
    e = e ^ m;
    r_k_9 = e;
    e = k_10 ^ mpt_2;
    e = e ^ m;
    r_k_10 = e;
    e = k_11 ^ mpt_3;
    e = e ^ m;
    r_k_11 = e;
    e = k_12 ^ mpt_0;
    e = e ^ m;
    r_k_12 = e;
    e = k_13 ^ mpt_1;
    e = e ^ m;
    r_k_13 = e;
    e = k_14 ^ mpt_2;
    e = e ^ m;
    r_k_14 = e;
    e = k_15 ^ mpt_3;
    e = e ^ m;
    r_k_15 = e;
    temp_0 = r_k_12;
    temp_1 = r_k_13;
    temp_2 = r_k_14;
    temp_3 = r_k_15;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox01;
    e = r_k_0 ^ temp_0;
    e = e ^ mp;
    r_k_16 = e;
    e = r_k_1 ^ temp_1;
    e = e ^ mp;
    r_k_17 = e;
    e = r_k_2 ^ temp_2;
    e = e ^ mp;
    r_k_18 = e;
    e = r_k_3 ^ temp_3;
    e = e ^ mp;
    r_k_19 = e;
    temp_0 = r_k_16;
    temp_1 = r_k_17;
    temp_2 = r_k_18;
    temp_3 = r_k_19;
    e = r_k_4 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_20 = g;
    e = r_k_5 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_21 = g;
    e = r_k_6 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_22 = g;
    e = r_k_7 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_23 = g;
    temp_0 = r_k_20;
    temp_1 = r_k_21;
    temp_2 = r_k_22;
    temp_3 = r_k_23;
    e = r_k_8 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_24 = g;
    e = r_k_9 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_25 = g;
    e = r_k_10 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_26 = g;
    e = r_k_11 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_27 = g;
    temp_0 = r_k_24;
    temp_1 = r_k_25;
    temp_2 = r_k_26;
    temp_3 = r_k_27;
    e = r_k_12 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_28 = g;
    e = r_k_13 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_29 = g;
    e = r_k_14 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_30 = g;
    e = r_k_15 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_31 = g;
    temp_0 = r_k_28;
    temp_1 = r_k_29;
    temp_2 = r_k_30;
    temp_3 = r_k_31;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox02;
    e = r_k_16 ^ temp_0;
    e = e ^ mp;
    r_k_32 = e;
    e = r_k_17 ^ temp_1;
    e = e ^ mp;
    r_k_33 = e;
    e = r_k_18 ^ temp_2;
    e = e ^ mp;
    r_k_34 = e;
    e = r_k_19 ^ temp_3;
    e = e ^ mp;
    r_k_35 = e;
    temp_0 = r_k_32;
    temp_1 = r_k_33;
    temp_2 = r_k_34;
    temp_3 = r_k_35;
    e = r_k_20 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_36 = g;
    e = r_k_21 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_37 = g;
    e = r_k_22 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_38 = g;
    e = r_k_23 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_39 = g;
    temp_0 = r_k_36;
    temp_1 = r_k_37;
    temp_2 = r_k_38;
    temp_3 = r_k_39;
    e = r_k_24 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_40 = g;
    e = r_k_25 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_41 = g;
    e = r_k_26 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_42 = g;
    e = r_k_27 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_43 = g;
    temp_0 = r_k_40;
    temp_1 = r_k_41;
    temp_2 = r_k_42;
    temp_3 = r_k_43;
    e = r_k_28 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_44 = g;
    e = r_k_29 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_45 = g;
    e = r_k_30 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_46 = g;
    e = r_k_31 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_47 = g;
    temp_0 = r_k_44;
    temp_1 = r_k_45;
    temp_2 = r_k_46;
    temp_3 = r_k_47;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox04;
    e = r_k_32 ^ temp_0;
    e = e ^ mp;
    r_k_48 = e;
    e = r_k_33 ^ temp_1;
    e = e ^ mp;
    r_k_49 = e;
    e = r_k_34 ^ temp_2;
    e = e ^ mp;
    r_k_50 = e;
    e = r_k_35 ^ temp_3;
    e = e ^ mp;
    r_k_51 = e;
    temp_0 = r_k_48;
    temp_1 = r_k_49;
    temp_2 = r_k_50;
    temp_3 = r_k_51;
    e = r_k_36 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_52 = g;
    e = r_k_37 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_53 = g;
    e = r_k_38 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_54 = g;
    e = r_k_39 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_55 = g;
    temp_0 = r_k_52;
    temp_1 = r_k_53;
    temp_2 = r_k_54;
    temp_3 = r_k_55;
    e = r_k_40 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_56 = g;
    e = r_k_41 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_57 = g;
    e = r_k_42 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_58 = g;
    e = r_k_43 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_59 = g;
    temp_0 = r_k_56;
    temp_1 = r_k_57;
    temp_2 = r_k_58;
    temp_3 = r_k_59;
    e = r_k_44 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_60 = g;
    e = r_k_45 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_61 = g;
    e = r_k_46 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_62 = g;
    e = r_k_47 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_63 = g;
    temp_0 = r_k_60;
    temp_1 = r_k_61;
    temp_2 = r_k_62;
    temp_3 = r_k_63;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox08;
    e = r_k_48 ^ temp_0;
    e = e ^ mp;
    r_k_64 = e;
    e = r_k_49 ^ temp_1;
    e = e ^ mp;
    r_k_65 = e;
    e = r_k_50 ^ temp_2;
    e = e ^ mp;
    r_k_66 = e;
    e = r_k_51 ^ temp_3;
    e = e ^ mp;
    r_k_67 = e;
    temp_0 = r_k_64;
    temp_1 = r_k_65;
    temp_2 = r_k_66;
    temp_3 = r_k_67;
    e = r_k_52 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_68 = g;
    e = r_k_53 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_69 = g;
    e = r_k_54 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_70 = g;
    e = r_k_55 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_71 = g;
    temp_0 = r_k_68;
    temp_1 = r_k_69;
    temp_2 = r_k_70;
    temp_3 = r_k_71;
    e = r_k_56 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_72 = g;
    e = r_k_57 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_73 = g;
    e = r_k_58 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_74 = g;
    e = r_k_59 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_75 = g;
    temp_0 = r_k_72;
    temp_1 = r_k_73;
    temp_2 = r_k_74;
    temp_3 = r_k_75;
    e = r_k_60 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_76 = g;
    e = r_k_61 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_77 = g;
    e = r_k_62 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_78 = g;
    e = r_k_63 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_79 = g;
    temp_0 = r_k_76;
    temp_1 = r_k_77;
    temp_2 = r_k_78;
    temp_3 = r_k_79;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox10;
    e = r_k_64 ^ temp_0;
    e = e ^ mp;
    r_k_80 = e;
    e = r_k_65 ^ temp_1;
    e = e ^ mp;
    r_k_81 = e;
    e = r_k_66 ^ temp_2;
    e = e ^ mp;
    r_k_82 = e;
    e = r_k_67 ^ temp_3;
    e = e ^ mp;
    r_k_83 = e;
    temp_0 = r_k_80;
    temp_1 = r_k_81;
    temp_2 = r_k_82;
    temp_3 = r_k_83;
    e = r_k_68 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_84 = g;
    e = r_k_69 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_85 = g;
    e = r_k_70 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_86 = g;
    e = r_k_71 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_87 = g;
    temp_0 = r_k_84;
    temp_1 = r_k_85;
    temp_2 = r_k_86;
    temp_3 = r_k_87;
    e = r_k_72 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_88 = g;
    e = r_k_73 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_89 = g;
    e = r_k_74 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_90 = g;
    e = r_k_75 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_91 = g;
    temp_0 = r_k_88;
    temp_1 = r_k_89;
    temp_2 = r_k_90;
    temp_3 = r_k_91;
    e = r_k_76 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_92 = g;
    e = r_k_77 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_93 = g;
    e = r_k_78 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_94 = g;
    e = r_k_79 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_95 = g;
    temp_0 = r_k_92;
    temp_1 = r_k_93;
    temp_2 = r_k_94;
    temp_3 = r_k_95;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox20;
    e = r_k_80 ^ temp_0;
    e = e ^ mp;
    r_k_96 = e;
    e = r_k_81 ^ temp_1;
    e = e ^ mp;
    r_k_97 = e;
    e = r_k_82 ^ temp_2;
    e = e ^ mp;
    r_k_98 = e;
    e = r_k_83 ^ temp_3;
    e = e ^ mp;
    r_k_99 = e;
    temp_0 = r_k_96;
    temp_1 = r_k_97;
    temp_2 = r_k_98;
    temp_3 = r_k_99;
    e = r_k_84 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_100 = g;
    e = r_k_85 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_101 = g;
    e = r_k_86 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_102 = g;
    e = r_k_87 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_103 = g;
    temp_0 = r_k_100;
    temp_1 = r_k_101;
    temp_2 = r_k_102;
    temp_3 = r_k_103;
    e = r_k_88 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_104 = g;
    e = r_k_89 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_105 = g;
    e = r_k_90 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_106 = g;
    e = r_k_91 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_107 = g;
    temp_0 = r_k_104;
    temp_1 = r_k_105;
    temp_2 = r_k_106;
    temp_3 = r_k_107;
    e = r_k_92 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_108 = g;
    e = r_k_93 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_109 = g;
    e = r_k_94 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_110 = g;
    e = r_k_95 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_111 = g;
    temp_0 = r_k_108;
    temp_1 = r_k_109;
    temp_2 = r_k_110;
    temp_3 = r_k_111;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox40;
    e = r_k_96 ^ temp_0;
    e = e ^ mp;
    r_k_112 = e;
    e = r_k_97 ^ temp_1;
    e = e ^ mp;
    r_k_113 = e;
    e = r_k_98 ^ temp_2;
    e = e ^ mp;
    r_k_114 = e;
    e = r_k_99 ^ temp_3;
    e = e ^ mp;
    r_k_115 = e;
    temp_0 = r_k_112;
    temp_1 = r_k_113;
    temp_2 = r_k_114;
    temp_3 = r_k_115;
    e = r_k_100 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_116 = g;
    e = r_k_101 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_117 = g;
    e = r_k_102 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_118 = g;
    e = r_k_103 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_119 = g;
    temp_0 = r_k_116;
    temp_1 = r_k_117;
    temp_2 = r_k_118;
    temp_3 = r_k_119;
    e = r_k_104 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_120 = g;
    e = r_k_105 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_121 = g;
    e = r_k_106 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_122 = g;
    e = r_k_107 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_123 = g;
    temp_0 = r_k_120;
    temp_1 = r_k_121;
    temp_2 = r_k_122;
    temp_3 = r_k_123;
    e = r_k_108 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_124 = g;
    e = r_k_109 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_125 = g;
    e = r_k_110 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_126 = g;
    e = r_k_111 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_127 = g;
    temp_0 = r_k_124;
    temp_1 = r_k_125;
    temp_2 = r_k_126;
    temp_3 = r_k_127;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox80;
    e = r_k_112 ^ temp_0;
    e = e ^ mp;
    r_k_128 = e;
    e = r_k_113 ^ temp_1;
    e = e ^ mp;
    r_k_129 = e;
    e = r_k_114 ^ temp_2;
    e = e ^ mp;
    r_k_130 = e;
    e = r_k_115 ^ temp_3;
    e = e ^ mp;
    r_k_131 = e;
    temp_0 = r_k_128;
    temp_1 = r_k_129;
    temp_2 = r_k_130;
    temp_3 = r_k_131;
    e = r_k_116 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_132 = g;
    e = r_k_117 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_133 = g;
    e = r_k_118 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_134 = g;
    e = r_k_119 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_135 = g;
    temp_0 = r_k_132;
    temp_1 = r_k_133;
    temp_2 = r_k_134;
    temp_3 = r_k_135;
    e = r_k_120 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_136 = g;
    e = r_k_121 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_137 = g;
    e = r_k_122 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_138 = g;
    e = r_k_123 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_139 = g;
    temp_0 = r_k_136;
    temp_1 = r_k_137;
    temp_2 = r_k_138;
    temp_3 = r_k_139;
    e = r_k_124 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_140 = g;
    e = r_k_125 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_141 = g;
    e = r_k_126 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_142 = g;
    e = r_k_127 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_143 = g;
    temp_0 = r_k_140;
    temp_1 = r_k_141;
    temp_2 = r_k_142;
    temp_3 = r_k_143;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox1b;
    e = r_k_128 ^ temp_0;
    e = e ^ mp;
    r_k_144 = e;
    e = r_k_129 ^ temp_1;
    e = e ^ mp;
    r_k_145 = e;
    e = r_k_130 ^ temp_2;
    e = e ^ mp;
    r_k_146 = e;
    e = r_k_131 ^ temp_3;
    e = e ^ mp;
    r_k_147 = e;
    temp_0 = r_k_144;
    temp_1 = r_k_145;
    temp_2 = r_k_146;
    temp_3 = r_k_147;
    e = r_k_132 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_148 = g;
    e = r_k_133 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_149 = g;
    e = r_k_134 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_150 = g;
    e = r_k_135 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_151 = g;
    temp_0 = r_k_148;
    temp_1 = r_k_149;
    temp_2 = r_k_150;
    temp_3 = r_k_151;
    e = r_k_136 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_152 = g;
    e = r_k_137 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_153 = g;
    e = r_k_138 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_154 = g;
    e = r_k_139 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_155 = g;
    temp_0 = r_k_152;
    temp_1 = r_k_153;
    temp_2 = r_k_154;
    temp_3 = r_k_155;
    e = r_k_140 ^ m;
    f = temp_0 ^ mpt_0;
    g = e ^ f;
    r_k_156 = g;
    e = r_k_141 ^ m;
    f = temp_1 ^ mpt_1;
    g = e ^ f;
    r_k_157 = g;
    e = r_k_142 ^ m;
    f = temp_2 ^ mpt_2;
    g = e ^ f;
    r_k_158 = g;
    e = r_k_143 ^ m;
    f = temp_3 ^ mpt_3;
    g = e ^ f;
    r_k_159 = g;
    temp_0 = r_k_156;
    temp_1 = r_k_157;
    temp_2 = r_k_158;
    temp_3 = r_k_159;
    k = temp_0 ^ mpt_0;
    temp_0 = temp_1 ^ mpt_1;
    temp_1 = temp_2 ^ mpt_2;
    temp_2 = temp_3 ^ mpt_3;
    temp_3 = k;
    temp_0 = temp_0 ^ mp;
    temp_0 = temp_0 ^ m;
    temp_1 = temp_1 ^ mp;
    temp_1 = temp_1 ^ m;
    temp_2 = temp_2 ^ mp;
    temp_2 = temp_2 ^ m;
    temp_3 = temp_3 ^ mp;
    temp_3 = temp_3 ^ m;
    temp_0 = temp_0 ^ Ox36;
    e = r_k_144 ^ temp_0;
    e = e ^ m;
    e = e ^ mpt_0;
    r_k_160 = e;
    e = r_k_145 ^ temp_1;
    e = e ^ m;
    e = e ^ mpt_1;
    r_k_161 = e;
    e = r_k_146 ^ temp_2;
    e = e ^ m;
    e = e ^ mpt_2;
    r_k_162 = e;
    e = r_k_147 ^ temp_3;
    e = e ^ m;
    e = e ^ mpt_3;
    r_k_163 = e;
    temp_0 = r_k_160;
    temp_1 = r_k_161;
    temp_2 = r_k_162;
    temp_3 = r_k_163;
    e = r_k_148 ^ temp_0;
    e = e ^ m;
    e = e ^ mpt_0;
    r_k_164 = e;
    e = r_k_149 ^ temp_1;
    e = e ^ m;
    e = e ^ mpt_1;
    r_k_165 = e;
    e = r_k_150 ^ temp_2;
    e = e ^ m;
    e = e ^ mpt_2;
    r_k_166 = e;
    e = r_k_151 ^ temp_3;
    e = e ^ m;
    e = e ^ mpt_3;
    r_k_167 = e;
    temp_0 = r_k_164;
    temp_1 = r_k_165;
    temp_2 = r_k_166;
    temp_3 = r_k_167;
    e = r_k_152 ^ temp_0;
    e = e ^ m;
    e = e ^ mpt_0;
    r_k_168 = e;
    e = r_k_153 ^ temp_1;
    e = e ^ m;
    e = e ^ mpt_1;
    r_k_169 = e;
    e = r_k_154 ^ temp_2;
    e = e ^ m;
    e = e ^ mpt_2;
    r_k_170 = e;
    e = r_k_155 ^ temp_3;
    e = e ^ m;
    e = e ^ mpt_3;
    r_k_171 = e;
    temp_0 = r_k_168;
    temp_1 = r_k_169;
    temp_2 = r_k_170;
    temp_3 = r_k_171;
    e = r_k_156 ^ temp_0;
    e = e ^ m;
    e = e ^ mpt_0;
    r_k_172 = e;
    e = r_k_157 ^ temp_1;
    e = e ^ m;
    e = e ^ mpt_1;
    r_k_173 = e;
    e = r_k_158 ^ temp_2;
    e = e ^ m;
    e = e ^ mpt_2;
    r_k_174 = e;
    e = r_k_159 ^ temp_3;
    e = e ^ m;
    e = e ^ mpt_3;
    r_k_175 = e;
    

    
(* #### Add round key #### *)
    e = r_k_0;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_1;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_2;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_3;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_4;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_5;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_6;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_7;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_8;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_9;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_10;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_11;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_12;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_13;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_14;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_15;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_16;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_17;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_18;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_19;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_20;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_21;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_22;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_23;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_24;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_25;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_26;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_27;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_28;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_29;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_30;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_31;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_32;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_33;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_34;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_35;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_36;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_37;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_38;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_39;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_40;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_41;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_42;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_43;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_44;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_45;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_46;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_47;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_48;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_49;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_50;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_51;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_52;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_53;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_54;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_55;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_56;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_57;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_58;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_59;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_60;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_61;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_62;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_63;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_64;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_65;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_66;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_67;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_68;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_69;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_70;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_71;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_72;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_73;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_74;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_75;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_76;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_77;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_78;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_79;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_80;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_81;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_82;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_83;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_84;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_85;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_86;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_87;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_88;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_89;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_90;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_91;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_92;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_93;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_94;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_95;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_96;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_97;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_98;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_99;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_100;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_101;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_102;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_103;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_104;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_105;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_106;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_107;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_108;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_109;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_110;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_111;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_112;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_113;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_114;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_115;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_116;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_117;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_118;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_119;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_120;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_121;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_122;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_123;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_124;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_125;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_126;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_127;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_128;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_129;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_130;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_131;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_132;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_133;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_134;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_135;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_136;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_137;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_138;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_139;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_140;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_141;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_142;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_143;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Change mask #### *)
    e = x_0_0 ^ mt_0;
    e = e ^ mp;
    x_0_0 = e;
    e = x_0_1 ^ mt_0;
    e = e ^ mp;
    x_0_1 = e;
    e = x_0_2 ^ mt_0;
    e = e ^ mp;
    x_0_2 = e;
    e = x_0_3 ^ mt_0;
    e = e ^ mp;
    x_0_3 = e;
    e = x_1_0 ^ mt_1;
    e = e ^ mp;
    x_1_0 = e;
    e = x_1_1 ^ mt_1;
    e = e ^ mp;
    x_1_1 = e;
    e = x_1_2 ^ mt_1;
    e = e ^ mp;
    x_1_2 = e;
    e = x_1_3 ^ mt_1;
    e = e ^ mp;
    x_1_3 = e;
    e = x_2_0 ^ mt_2;
    e = e ^ mp;
    x_2_0 = e;
    e = x_2_1 ^ mt_2;
    e = e ^ mp;
    x_2_1 = e;
    e = x_2_2 ^ mt_2;
    e = e ^ mp;
    x_2_2 = e;
    e = x_2_3 ^ mt_2;
    e = e ^ mp;
    x_2_3 = e;
    e = x_3_0 ^ mt_3;
    e = e ^ mp;
    x_3_0 = e;
    e = x_3_1 ^ mt_3;
    e = e ^ mp;
    x_3_1 = e;
    e = x_3_2 ^ mt_3;
    e = e ^ mp;
    x_3_2 = e;
    e = x_3_3 ^ mt_3;
    e = e ^ mp;
    x_3_3 = e;
    

    r_0 = x_0_0;
    r_1 = x_1_0;
    r_2 = x_2_0;
    r_3 = x_3_0;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_0 = r_0;
    x_1_0 = r_1;
    x_2_0 = r_2;
    x_3_0 = r_3;
    r_0 = x_0_1;
    r_1 = x_1_1;
    r_2 = x_2_1;
    r_3 = x_3_1;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_1 = r_0;
    x_1_1 = r_1;
    x_2_1 = r_2;
    x_3_1 = r_3;
    r_0 = x_0_2;
    r_1 = x_1_2;
    r_2 = x_2_2;
    r_3 = x_3_2;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_2 = r_0;
    x_1_2 = r_1;
    x_2_2 = r_2;
    x_3_2 = r_3;
    r_0 = x_0_3;
    r_1 = x_1_3;
    r_2 = x_2_3;
    r_3 = x_3_3;
    
(* #### Mix column #### *)
    a_0 = r_0;
    h = r_0 >> Ox07;
    b_0 = r_0 << Ox01;
    e = Ox1b & h;
    b_0 = b_0 ^ e;
    a_1 = r_1;
    h = r_1 >> Ox07;
    b_1 = r_1 << Ox01;
    e = Ox1b & h;
    b_1 = b_1 ^ e;
    a_2 = r_2;
    h = r_2 >> Ox07;
    b_2 = r_2 << Ox01;
    e = Ox1b & h;
    b_2 = b_2 ^ e;
    a_3 = r_3;
    h = r_3 >> Ox07;
    b_3 = r_3 << Ox01;
    e = Ox1b & h;
    b_3 = b_3 ^ e;
    e = b_0 ^ a_3;
    e = e ^ a_2;
    e = e ^ b_1;
    e = e ^ a_1;
    r_0 = e;
    e = b_1 ^ a_0;
    e = e ^ a_3;
    e = e ^ b_2;
    e = e ^ a_2;
    r_1 = e;
    e = b_2 ^ a_1;
    e = e ^ a_0;
    e = e ^ b_3;
    e = e ^ a_3;
    r_2 = e;
    e = b_3 ^ a_2;
    e = e ^ a_1;
    e = e ^ b_0;
    e = e ^ a_0;
    r_3 = e;
    

    x_0_3 = r_0;
    x_1_3 = r_1;
    x_2_3 = r_2;
    x_3_3 = r_3;
    
(* #### Add round key #### *)
    e = r_k_144;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_145;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_146;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_147;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_148;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_149;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_150;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_151;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_152;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_153;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_154;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_155;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_156;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_157;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_158;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_159;
    e = x_3_3 ^ e;
    x_3_3 = e;
    

    
(* #### Masked sub bytes #### *)
    e = x_0_0 ^ mp;
    e = x_0_0 ^ m;
    x_0_0 = e;
    e = x_0_1 ^ mp;
    e = x_0_1 ^ m;
    x_0_1 = e;
    e = x_0_2 ^ mp;
    e = x_0_2 ^ m;
    x_0_2 = e;
    e = x_0_3 ^ mp;
    e = x_0_3 ^ m;
    x_0_3 = e;
    e = x_1_0 ^ mp;
    e = x_1_0 ^ m;
    x_1_0 = e;
    e = x_1_1 ^ mp;
    e = x_1_1 ^ m;
    x_1_1 = e;
    e = x_1_2 ^ mp;
    e = x_1_2 ^ m;
    x_1_2 = e;
    e = x_1_3 ^ mp;
    e = x_1_3 ^ m;
    x_1_3 = e;
    e = x_2_0 ^ mp;
    e = x_2_0 ^ m;
    x_2_0 = e;
    e = x_2_1 ^ mp;
    e = x_2_1 ^ m;
    x_2_1 = e;
    e = x_2_2 ^ mp;
    e = x_2_2 ^ m;
    x_2_2 = e;
    e = x_2_3 ^ mp;
    e = x_2_3 ^ m;
    x_2_3 = e;
    e = x_3_0 ^ mp;
    e = x_3_0 ^ m;
    x_3_0 = e;
    e = x_3_1 ^ mp;
    e = x_3_1 ^ m;
    x_3_1 = e;
    e = x_3_2 ^ mp;
    e = x_3_2 ^ m;
    x_3_2 = e;
    e = x_3_3 ^ mp;
    e = x_3_3 ^ m;
    x_3_3 = e;
    

    
(* #### Shift rows #### *)
    tmp = x_1_0;
    x_1_0 = x_1_1;
    x_1_1 = x_1_2;
    x_1_2 = x_1_3;
    x_1_3 = tmp;
    tmp = x_2_0;
    x_2_0 = x_2_2;
    x_2_2 = tmp;
    tmp = x_2_1;
    x_2_1 = x_2_3;
    x_2_3 = tmp;
    tmp = x_3_0;
    x_3_0 = x_3_3;
    x_3_3 = x_3_2;
    x_3_2 = x_3_1;
    x_3_1 = tmp;
    

    
(* #### Add round key #### *)
    e = r_k_160;
    e = x_0_0 ^ e;
    x_0_0 = e;
    e = r_k_161;
    e = x_1_0 ^ e;
    x_1_0 = e;
    e = r_k_162;
    e = x_2_0 ^ e;
    x_2_0 = e;
    e = r_k_163;
    e = x_3_0 ^ e;
    x_3_0 = e;
    e = r_k_164;
    e = x_0_1 ^ e;
    x_0_1 = e;
    e = r_k_165;
    e = x_1_1 ^ e;
    x_1_1 = e;
    e = r_k_166;
    e = x_2_1 ^ e;
    x_2_1 = e;
    e = r_k_167;
    e = x_3_1 ^ e;
    x_3_1 = e;
    e = r_k_168;
    e = x_0_2 ^ e;
    x_0_2 = e;
    e = r_k_169;
    e = x_1_2 ^ e;
    x_1_2 = e;
    e = r_k_170;
    e = x_2_2 ^ e;
    x_2_2 = e;
    e = r_k_171;
    e = x_3_2 ^ e;
    x_3_2 = e;
    e = r_k_172;
    e = x_0_3 ^ e;
    x_0_3 = e;
    e = r_k_173;
    e = x_1_3 ^ e;
    x_1_3 = e;
    e = r_k_174;
    e = x_2_3 ^ e;
    x_2_3 = e;
    e = r_k_175;
    e = x_3_3 ^ e;
    x_3_3 = e;
  }
}
 
