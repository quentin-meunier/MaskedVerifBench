(* File TI-Add-Opt-8.mv *)
(*                                                                                       *)
(* Copyright (C) 2021, Sorbonne Universite, LIP6                                         *)
(* This file is part of the MaskedVerifBench project, under the GPL v3.0 license         *)
(* See https://www.gnu.org/licenses/gpl-3.0.en.html for license information              *)
(* SPDX-License-Identifier: GPL-3.0-only                                                 *)
(* Author(s): Etienne Pons                                                               *)

proc MAIN:
	inputs: w8 x[0:1], w8 y[0:1]
	outputs: w8 regz[0], w8 regu[0], w8 regd[0], w8 regt[0], w8 regq[0], w8 regc[0], w8 regsi[0], w8 regse[0], w8 regh[0], w8 regn[0], w8 reguz[0], w8 reguu[0], w8 regud[0]
	randoms: w8 r;

	regz0 = { x0 };
	regu0 = { x1 };
	regd0 = { y0 };
	regt0 = { y1 };

	regud0 = { (0x01:w8) &w8 r };
	reguu0 = { ~w8(~w8(regud0) &w8 ~w8(regz0 >> 1)) };
	regud0 = { regz0 << 7 };
	regq0 = { ~w8(~w8(regz0) &w8 regt0) };
	regsi0 = { regd0 &w8 regz0 };
	regc0 = { ~w8(~w8(regu0) &w8 regt0) };
	regse0 = { regd0 &w8 regu0 };
	regc0 = { regse0 ^w8 regc0 };
	regq0 = { regsi0 ^w8 regq0 };
	regd0 = { regd0 ^w8 regz0 };
	regt0 = { regu0 ^w8 regt0 };
	regc0 = { regc0 ^w8 reguu0 };
	regq0 = { reguu0 ^w8 regq0 };
	regh0 = { regt0 &w8 (regq0 << 1) };
	regn0 = { regd0 &w8 (regq0 << 1) };
	regq0 = { regn0 ^w8 regq0 };
	regq0 = { regh0 ^w8 regq0 };
	reguz0 = { regt0 &w8 (regc0 << 1) };
	reguu0 = { regd0 &w8 (regc0 << 1) };
	regc0 = { reguz0 ^w8 regc0 };
	regc0 = { reguu0 ^w8 regc0 };
	regh0 = { ~w8(~w8regt0 &w8 (regt0 << 1)) };
	reguz0 = { regt0 &w8 (regd0 << 1) };
	regn0 = { ~w8(~w8regd0 &w8 (regt0 << 1)) };
	reguu0 = { regd0 &w8 (regd0 << 1) };
	regse0 = { reguz0 ^w8 regh0 };
	regsi0 = { regn0 ^w8 reguu0 };
	regh0 = { regse0 &w8 (regq0 << 2) };
	regn0 = { regsi0 &w8 (regq0 << 2) };
	regq0 = { regn0 ^w8 regq0 };
	regq0 = { regh0 ^w8 regq0 };
	reguz0 = { regse0 &w8 (regc0 << 2) };
	reguu0 = { regsi0 &w8 (regc0 << 2) };
	regc0 = { reguz0 ^w8 regc0 };
	regc0 = { reguu0 ^w8 regc0 };
	regh0 = { ~w8(~w8regse0 &w8 (regse0 << 2)) };
	reguz0 = { regse0 &w8 (regsi0 << 2) };
	regn0 = { ~w8(~w8regsi0 &w8 (regse0 << 2)) };
	reguu0 = { regsi0 &w8 (regsi0 << 2) };
	regse0 = { reguz0 ^w8 regh0 };
	regsi0 = { regn0 ^w8 reguu0 };
	regn0 = { regse0 &w8 (regq0 << 4) };
	regh0 = { regsi0 &w8 (regq0 << 4) };
	regq0 = { regn0 ^w8 regq0 };
	regq0 = { regh0 ^w8 regq0 };
	reguu0 = { regse0 &w8 (regc0 << 4) };
	reguz0 = { regsi0 &w8 (regc0 << 4) };
	regc0 = { reguu0 ^w8 regc0 };
	regc0 = { reguz0 ^w8 regc0 };
	regz0 = { regd0 ^w8 (regq0 << 1) };
	regu0 = { regt0 ^w8 (regc0 << 1) };
end

verbose 0
Probing MAIN
