# File Sbox5.py
#
# Copyright (C) 2021, Sorbonne Universite, LIP6
# This file is part of the MaskedVerifBench project, under the GPL v3.0 license
# See https://www.gnu.org/licenses/gpl-3.0.en.html for license information
# SPDX-License-Identifier: GPL-3.0-only
# Author(s): Etienne Pons


from leakage_verif import *
from maskedbench_utils import *

x = symbol('x', 'S', 8)
Ox63 = constant(99, 8)
x_0 = symbol('x_0', 'M', 8)
x_1 = symbol('x_1', 'M', 8)
refresh_0_1 = symbol('refresh_0_1', 'M', 8)
refresh_0_2 = symbol('refresh_0_2', 'M', 8)
s0 = symbol('s0', 'M', 8)
s1 = symbol('s1', 'M', 8)
s2 = symbol('s2', 'M', 8)
refresh_1_1 = symbol('refresh_1_1', 'M', 8)
refresh_1_2 = symbol('refresh_1_2', 'M', 8)
s3 = symbol('s3', 'M', 8)
s4 = symbol('s4', 'M', 8)
s5 = symbol('s5', 'M', 8)
s6 = symbol('s6', 'M', 8)
s7 = symbol('s7', 'M', 8)
s8 = symbol('s8', 'M', 8)
s9 = symbol('s9', 'M', 8)
s10 = symbol('s10', 'M', 8)
s11 = symbol('s11', 'M', 8)

x_2 = x ^ x_0 ^ x_1
x_2 = verif(x_2, 1, 115)
z_0 = x_0 * x_0
z_0 = verif(z_0, 2, 115)
z_1 = x_1 * x_1
z_1 = verif(z_1, 3, 115)
z_2 = x_2 * x_2
z_2 = verif(z_2, 4, 115)
z_0 = z_0 ^ refresh_0_1
z_0 = verif(z_0, 5, 115)
z_1 = z_1 ^ refresh_0_1
z_1 = verif(z_1, 6, 115)
z_0 = z_0 ^ refresh_0_2
z_0 = verif(z_0, 7, 115)
z_2 = z_2 ^ refresh_0_2
z_2 = verif(z_2, 8, 115)
out_0 = z_0 * x_0
out_0 = verif(out_0, 9, 115)
out_1 = z_1 * x_1
out_1 = verif(out_1, 10, 115)
out_2 = z_2 * x_2
out_2 = verif(out_2, 11, 115)
tmp_secMult_i_j = z_0 * x_1
tmp_secMult_i_j = verif(tmp_secMult_i_j, 12, 115)
tmp_secMult_j_i = z_1 * x_0
tmp_secMult_j_i = verif(tmp_secMult_j_i, 13, 115)
sp = s0 ^ tmp_secMult_i_j
sp = verif(sp, 14, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 15, 115)
out_0 = out_0 ^ s0
out_0 = verif(out_0, 16, 115)
out_1 = out_1 ^ sp
out_1 = verif(out_1, 17, 115)
tmp_secMult_i_j = z_0 * x_2
tmp_secMult_i_j = verif(tmp_secMult_i_j, 18, 115)
tmp_secMult_j_i = z_2 * x_0
tmp_secMult_j_i = verif(tmp_secMult_j_i, 19, 115)
sp = s1 ^ tmp_secMult_i_j
sp = verif(sp, 20, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 21, 115)
out_0 = out_0 ^ s1
out_0 = verif(out_0, 22, 115)
out_2 = out_2 ^ sp
out_2 = verif(out_2, 23, 115)
tmp_secMult_i_j = z_1 * x_2
tmp_secMult_i_j = verif(tmp_secMult_i_j, 24, 115)
tmp_secMult_j_i = z_2 * x_1
tmp_secMult_j_i = verif(tmp_secMult_j_i, 25, 115)
sp = s2 ^ tmp_secMult_i_j
sp = verif(sp, 26, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 27, 115)
out_1 = out_1 ^ s2
out_1 = verif(out_1, 28, 115)
out_2 = out_2 ^ sp
out_2 = verif(out_2, 29, 115)
y_0 = out_0
y_0 = verif(y_0, 30, 115)
y_1 = out_1
y_1 = verif(y_1, 31, 115)
y_2 = out_2
y_2 = verif(y_2, 32, 115)
w_0 = y_0 * y_0 * y_0 * y_0
w_0 = verif(w_0, 33, 115)
w_1 = y_1 * y_1 * y_1 * y_1
w_1 = verif(w_1, 34, 115)
w_2 = y_2 * y_2 * y_2 * y_2
w_2 = verif(w_2, 35, 115)
w_0 = w_0 ^ refresh_1_1
w_0 = verif(w_0, 36, 115)
w_1 = w_1 ^ refresh_1_1
w_1 = verif(w_1, 37, 115)
w_0 = w_0 ^ refresh_1_2
w_0 = verif(w_0, 38, 115)
w_2 = w_2 ^ refresh_1_2
w_2 = verif(w_2, 39, 115)
out_0 = y_0 * w_0
out_0 = verif(out_0, 40, 115)
out_1 = y_1 * w_1
out_1 = verif(out_1, 41, 115)
out_2 = y_2 * w_2
out_2 = verif(out_2, 42, 115)
tmp_secMult_i_j = y_0 * w_1
tmp_secMult_i_j = verif(tmp_secMult_i_j, 43, 115)
tmp_secMult_j_i = y_1 * w_0
tmp_secMult_j_i = verif(tmp_secMult_j_i, 44, 115)
sp = s3 ^ tmp_secMult_i_j
sp = verif(sp, 45, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 46, 115)
out_0 = out_0 ^ s3
out_0 = verif(out_0, 47, 115)
out_1 = out_1 ^ sp
out_1 = verif(out_1, 48, 115)
tmp_secMult_i_j = y_0 * w_2
tmp_secMult_i_j = verif(tmp_secMult_i_j, 49, 115)
tmp_secMult_j_i = y_2 * w_0
tmp_secMult_j_i = verif(tmp_secMult_j_i, 50, 115)
sp = s4 ^ tmp_secMult_i_j
sp = verif(sp, 51, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 52, 115)
out_0 = out_0 ^ s4
out_0 = verif(out_0, 53, 115)
out_2 = out_2 ^ sp
out_2 = verif(out_2, 54, 115)
tmp_secMult_i_j = y_1 * w_2
tmp_secMult_i_j = verif(tmp_secMult_i_j, 55, 115)
tmp_secMult_j_i = y_2 * w_1
tmp_secMult_j_i = verif(tmp_secMult_j_i, 56, 115)
sp = s5 ^ tmp_secMult_i_j
sp = verif(sp, 57, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 58, 115)
out_1 = out_1 ^ s5
out_1 = verif(out_1, 59, 115)
out_2 = out_2 ^ sp
out_2 = verif(out_2, 60, 115)
y_0 = out_0
y_0 = verif(y_0, 61, 115)
y_1 = out_1
y_1 = verif(y_1, 62, 115)
y_2 = out_2
y_2 = verif(y_2, 63, 115)
y_0 = y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0
y_0 = verif(y_0, 64, 115)
y_1 = y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1
y_1 = verif(y_1, 65, 115)
y_2 = y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2
y_2 = verif(y_2, 66, 115)
out_0 = y_0 * w_0
out_0 = verif(out_0, 67, 115)
out_1 = y_1 * w_1
out_1 = verif(out_1, 68, 115)
out_2 = y_2 * w_2
out_2 = verif(out_2, 69, 115)
tmp_secMult_i_j = y_0 * w_1
tmp_secMult_i_j = verif(tmp_secMult_i_j, 70, 115)
tmp_secMult_j_i = y_1 * w_0
tmp_secMult_j_i = verif(tmp_secMult_j_i, 71, 115)
sp = s6 ^ tmp_secMult_i_j
sp = verif(sp, 72, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 73, 115)
out_0 = out_0 ^ s6
out_0 = verif(out_0, 74, 115)
out_1 = out_1 ^ sp
out_1 = verif(out_1, 75, 115)
tmp_secMult_i_j = y_0 * w_2
tmp_secMult_i_j = verif(tmp_secMult_i_j, 76, 115)
tmp_secMult_j_i = y_2 * w_0
tmp_secMult_j_i = verif(tmp_secMult_j_i, 77, 115)
sp = s7 ^ tmp_secMult_i_j
sp = verif(sp, 78, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 79, 115)
out_0 = out_0 ^ s7
out_0 = verif(out_0, 80, 115)
out_2 = out_2 ^ sp
out_2 = verif(out_2, 81, 115)
tmp_secMult_i_j = y_1 * w_2
tmp_secMult_i_j = verif(tmp_secMult_i_j, 82, 115)
tmp_secMult_j_i = y_2 * w_1
tmp_secMult_j_i = verif(tmp_secMult_j_i, 83, 115)
sp = s8 ^ tmp_secMult_i_j
sp = verif(sp, 84, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 85, 115)
out_1 = out_1 ^ s8
out_1 = verif(out_1, 86, 115)
out_2 = out_2 ^ sp
out_2 = verif(out_2, 87, 115)
y_0 = out_0
y_0 = verif(y_0, 88, 115)
y_1 = out_1
y_1 = verif(y_1, 89, 115)
y_2 = out_2
y_2 = verif(y_2, 90, 115)
out_0 = y_0 * z_0
out_0 = verif(out_0, 91, 115)
out_1 = y_1 * z_1
out_1 = verif(out_1, 92, 115)
out_2 = y_2 * z_2
out_2 = verif(out_2, 93, 115)
tmp_secMult_i_j = y_0 * z_1
tmp_secMult_i_j = verif(tmp_secMult_i_j, 94, 115)
tmp_secMult_j_i = y_1 * z_0
tmp_secMult_j_i = verif(tmp_secMult_j_i, 95, 115)
sp = s9 ^ tmp_secMult_i_j
sp = verif(sp, 96, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 97, 115)
out_0 = out_0 ^ s9
out_0 = verif(out_0, 98, 115)
out_1 = out_1 ^ sp
out_1 = verif(out_1, 99, 115)
tmp_secMult_i_j = y_0 * z_2
tmp_secMult_i_j = verif(tmp_secMult_i_j, 100, 115)
tmp_secMult_j_i = y_2 * z_0
tmp_secMult_j_i = verif(tmp_secMult_j_i, 101, 115)
sp = s10 ^ tmp_secMult_i_j
sp = verif(sp, 102, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 103, 115)
out_0 = out_0 ^ s10
out_0 = verif(out_0, 104, 115)
out_2 = out_2 ^ sp
out_2 = verif(out_2, 105, 115)
tmp_secMult_i_j = y_1 * z_2
tmp_secMult_i_j = verif(tmp_secMult_i_j, 106, 115)
tmp_secMult_j_i = y_2 * z_1
tmp_secMult_j_i = verif(tmp_secMult_j_i, 107, 115)
sp = s11 ^ tmp_secMult_i_j
sp = verif(sp, 108, 115)
sp = sp ^ tmp_secMult_j_i
sp = verif(sp, 109, 115)
out_1 = out_1 ^ s11
out_1 = verif(out_1, 110, 115)
out_2 = out_2 ^ sp
out_2 = verif(out_2, 111, 115)
y_0 = out_0
y_0 = verif(y_0, 112, 115)
y_1 = out_1
y_1 = verif(y_1, 113, 115)
y_2 = out_2
y_2 = verif(y_2, 114, 115)
y_0 = y_0 ^ Ox63
y_0 = verif(y_0, 115, 115)
print_results()



"""

x_2 = x ^ x_0 ^ x_1
z_0 = x_0 * x_0
z_1 = x_1 * x_1
z_2 = x_2 * x_2
z_0 = z_0 ^ refresh_0_1
z_1 = z_1 ^ refresh_0_1
z_0 = z_0 ^ refresh_0_2
z_2 = z_2 ^ refresh_0_2
out_0 = z_0 * x_0
out_1 = z_1 * x_1
out_2 = z_2 * x_2
tmp_secMult_i_j = z_0 * x_1
tmp_secMult_j_i = z_1 * x_0
sp = s0 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_0 = out_0 ^ s0
out_1 = out_1 ^ sp
tmp_secMult_i_j = z_0 * x_2
tmp_secMult_j_i = z_2 * x_0
sp = s1 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_0 = out_0 ^ s1
out_2 = out_2 ^ sp
tmp_secMult_i_j = z_1 * x_2
tmp_secMult_j_i = z_2 * x_1
sp = s2 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_1 = out_1 ^ s2
out_2 = out_2 ^ sp
y_0 = out_0
y_1 = out_1
y_2 = out_2
w_0 = y_0 * y_0 * y_0 * y_0
w_1 = y_1 * y_1 * y_1 * y_1
w_2 = y_2 * y_2 * y_2 * y_2
w_0 = w_0 ^ refresh_1_1
w_1 = w_1 ^ refresh_1_1
w_0 = w_0 ^ refresh_1_2
w_2 = w_2 ^ refresh_1_2
out_0 = y_0 * w_0
out_1 = y_1 * w_1
out_2 = y_2 * w_2
tmp_secMult_i_j = y_0 * w_1
tmp_secMult_j_i = y_1 * w_0
sp = s3 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_0 = out_0 ^ s3
out_1 = out_1 ^ sp
tmp_secMult_i_j = y_0 * w_2
tmp_secMult_j_i = y_2 * w_0
sp = s4 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_0 = out_0 ^ s4
out_2 = out_2 ^ sp
tmp_secMult_i_j = y_1 * w_2
tmp_secMult_j_i = y_2 * w_1
sp = s5 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_1 = out_1 ^ s5
out_2 = out_2 ^ sp
y_0 = out_0
y_1 = out_1
y_2 = out_2
y_0 = y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0 * y_0
y_1 = y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1 * y_1
y_2 = y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2 * y_2
out_0 = y_0 * w_0
out_1 = y_1 * w_1
out_2 = y_2 * w_2
tmp_secMult_i_j = y_0 * w_1
tmp_secMult_j_i = y_1 * w_0
sp = s6 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_0 = out_0 ^ s6
out_1 = out_1 ^ sp
tmp_secMult_i_j = y_0 * w_2
tmp_secMult_j_i = y_2 * w_0
sp = s7 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_0 = out_0 ^ s7
out_2 = out_2 ^ sp
tmp_secMult_i_j = y_1 * w_2
tmp_secMult_j_i = y_2 * w_1
sp = s8 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_1 = out_1 ^ s8
out_2 = out_2 ^ sp
y_0 = out_0
y_1 = out_1
y_2 = out_2
out_0 = y_0 * z_0
out_1 = y_1 * z_1
out_2 = y_2 * z_2
tmp_secMult_i_j = y_0 * z_1
tmp_secMult_j_i = y_1 * z_0
sp = s9 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_0 = out_0 ^ s9
out_1 = out_1 ^ sp
tmp_secMult_i_j = y_0 * z_2
tmp_secMult_j_i = y_2 * z_0
sp = s10 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_0 = out_0 ^ s10
out_2 = out_2 ^ sp
tmp_secMult_i_j = y_1 * z_2
tmp_secMult_j_i = y_2 * z_1
sp = s11 ^ tmp_secMult_i_j
sp = sp ^ tmp_secMult_j_i
out_1 = out_1 ^ s11
out_2 = out_2 ^ sp
y_0 = out_0
y_1 = out_1
y_2 = out_2
y_0 = y_0 ^ Ox63

"""
